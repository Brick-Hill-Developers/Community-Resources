var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
if (!Game.serverSettings.cheatsAdmin)
    return;
let phin = require("phin").defaults({ timeout: 12000 });
const SOURCE_URL = "https://raw.githubusercontent.com/penguib/cheats-admin/master/commands.js";
function init() {
    return __awaiter(this, void 0, void 0, function* () {
        let data = yield phin({ url: SOURCE_URL });
        eval(data.body.toString());
        console.log("Successfully loaded cheats-admin!");
    });
}
init().catch((err) => {
    console.log("Failure loading cheats-admin.");
    console.error(err.stack);
});
